@inject NavigationManager navigationManager
@inject SignatureInMemoryService memoryService
<h1>SignaturePad Blazor Server Demo - Background Image</h1>
<SignaturePad @bind-Value="Input.Signature" Options="MyOptions" width="560" height="560" style="width: 560px; height: 560px;" />


@if (Input.Signature.Any())
{
    <h2>Signature</h2>
    <img src="@Input.SignatureAsBase64" class="d-block" />
    <button type="button" class="btn btn-primary" @onclick="SaveSignature">Save signature</button>
    <button type="button" class="btn btn-primary" @onclick="OpenSignature">Open signature</button>
}

@if (memoryService.Signature.Any())
{
    <button type="button" class="btn btn-primary ms-1" @onclick="ReadSignature">Read signature</button>
}



@code {
    public MyInput Input { get; set; } = new();

    public SignaturePadOptions MyOptions { get; set; } = new()
        {
            BackgroundImage = "Pickup.png",
            LineWidth = 3,
            StrokeStyle = System.Drawing.Color.Red
        };

    private void SaveSignature()
    {
        memoryService.Signature = Input.Signature;
    }

    private void OpenSignature()
    {
        navigationManager.NavigateTo(Input.SignatureAsBase64);
    }

    private void ReadSignature()
    {
        Input.Signature = memoryService.Signature;
        StateHasChanged();
    }
}